#!/usr/bin/env python

import argparse
import os
import sys

parser = argparse.ArgumentParser()
parser.add_argument('--fix', action='store_true')

args = parser.parse_args()


def exit_code_is_0(sys_return) -> bool:
    """
    https://stackoverflow.com/questions/6466711/what-is-the-return-value-of-os-system-in-python
    The first 8 bits are the exit status. We will assume the process does not
    get killed, and so we don't need to worry about the signal number.
    """
    return (sys_return >> 8) == 0


passed = True

if args.fix:
    print("Running autopep8...")
    os.system("autopep8 . --recursive --in-place")
flake8_passed = exit_code_is_0(os.system("flake8"))
if not flake8_passed:
    print("flake8 failed ❌")
    print()
mypy_passed = exit_code_is_0(os.system("mypy ."))
if not flake8_passed:
    print("mypy failed ❌")
    print()
unittest_passed = exit_code_is_0(os.system("python -m unittest"))
if not unittest_passed:
    print("unittest failed ❌")
    print()

all_checks = [flake8_passed, mypy_passed, unittest_passed]
if all(all_checks):
    print("All checks passed ✔️")
else:
    sys.exit(1)
